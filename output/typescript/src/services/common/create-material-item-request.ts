// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const createMaterialItemRequest = z.lazy(() => {
  return z.object({
    name: z.string(),
    quantity: z.number(),
    url: z.string().optional(),
    skuId: z.string().optional(),
    productId: z.string().optional(),
  });
});

/**
 *
 * @typedef  {CreateMaterialItemRequest} createMaterialItemRequest
 * @property {string} - Name of the material item
 * @property {number} - Quantity of the material item
 * @property {string} - URL related to the material item
 * @property {string} - SKU ID of the material item
 * @property {string} - Product ID of the material item
 */
export type CreateMaterialItemRequest = z.infer<typeof createMaterialItemRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const createMaterialItemRequestResponse = z.lazy(() => {
  return z
    .object({
      name: z.string(),
      quantity: z.number(),
      url: z.string().optional(),
      skuId: z.string().optional(),
      productId: z.string().optional(),
    })
    .transform((data) => ({
      name: data['name'],
      quantity: data['quantity'],
      url: data['url'],
      skuId: data['skuId'],
      productId: data['productId'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const createMaterialItemRequestRequest = z.lazy(() => {
  return z
    .object({
      name: z.string(),
      quantity: z.number(),
      url: z.string().optional(),
      skuId: z.string().optional(),
      productId: z.string().optional(),
    })
    .transform((data) => ({
      name: data['name'],
      quantity: data['quantity'],
      url: data['url'],
      skuId: data['skuId'],
      productId: data['productId'],
    }));
});
