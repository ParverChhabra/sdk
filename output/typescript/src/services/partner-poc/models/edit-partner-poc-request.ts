// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';

/**
 * The shape of the model inside the application code - what the users use
 */
export const editPartnerPocRequest = z.lazy(() => {
  return z.object({
    firstName: z.string(),
    lastName: z.string(),
    phoneNumber: z.string(),
    isdCode: z.string(),
  });
});

/**
 *
 * @typedef  {EditPartnerPocRequest} editPartnerPocRequest
 * @property {string}
 * @property {string}
 * @property {string}
 * @property {string}
 */
export type EditPartnerPocRequest = z.infer<typeof editPartnerPocRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const editPartnerPocRequestResponse = z.lazy(() => {
  return z
    .object({
      firstName: z.string(),
      lastName: z.string(),
      phoneNumber: z.string(),
      isdCode: z.string(),
    })
    .transform((data) => ({
      firstName: data['firstName'],
      lastName: data['lastName'],
      phoneNumber: data['phoneNumber'],
      isdCode: data['isdCode'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const editPartnerPocRequestRequest = z.lazy(() => {
  return z
    .object({
      firstName: z.string(),
      lastName: z.string(),
      phoneNumber: z.string(),
      isdCode: z.string(),
    })
    .transform((data) => ({
      firstName: data['firstName'],
      lastName: data['lastName'],
      phoneNumber: data['phoneNumber'],
      isdCode: data['isdCode'],
    }));
});
