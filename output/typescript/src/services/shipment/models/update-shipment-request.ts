// This file was generated by liblab | https://liblab.com/

import { z } from 'zod';
import {
  UpdateShipmentAddress,
  updateShipmentAddress,
  updateShipmentAddressRequest,
  updateShipmentAddressResponse,
} from '../../common/update-shipment-address';
import {
  UpdateShipmentRequestRecipientType,
  updateShipmentRequestRecipientType,
} from './update-shipment-request-recipient-type';
import {
  UpdateShipmentRequestSenderType,
  updateShipmentRequestSenderType,
} from './update-shipment-request-sender-type';
import { UpdateShipmentRequestCarrier, updateShipmentRequestCarrier } from './update-shipment-request-carrier';
import {
  UpdateShipmentRequestDispatchType,
  updateShipmentRequestDispatchType,
} from './update-shipment-request-dispatch-type';

/**
 * The shape of the model inside the application code - what the users use
 */
export const updateShipmentRequest = z.lazy(() => {
  return z.object({
    recipientAddress: updateShipmentAddress.optional(),
    recipientType: updateShipmentRequestRecipientType.optional(),
    senderAddress: updateShipmentAddress.optional(),
    senderType: updateShipmentRequestSenderType,
    title: z.string().optional(),
    carrier: updateShipmentRequestCarrier.optional(),
    dispatchType: updateShipmentRequestDispatchType.optional(),
    dispatchDate: z.string().optional(),
    trackingId: z.string().optional(),
    trackingLink: z.string().optional(),
    note: z.string().optional(),
    expectedDeliveryDate: z.string().optional(),
    thirdPartyTrackingId: z.string().optional(),
    deliveryChallanUrl: z.string().optional(),
    sezFormsUrl: z.string().optional(),
    deliveryProofUrl: z.string().optional(),
    materialListUrl: z.string().optional(),
    shipmentLabelUrl: z.string().optional(),
  });
});

/**
 *
 * @typedef  {UpdateShipmentRequest} updateShipmentRequest
 * @property {UpdateShipmentAddress}
 * @property {UpdateShipmentRequestRecipientType} - Recipient type
 * @property {UpdateShipmentAddress}
 * @property {UpdateShipmentRequestSenderType} - Type of sender
 * @property {string} - Title of the shipment
 * @property {UpdateShipmentRequestCarrier} - Carrier for the shipment
 * @property {UpdateShipmentRequestDispatchType} - Type of dispatch for the shipment
 * @property {string} - Dispatch date
 * @property {string} - Tracking ID of the shipment
 * @property {string} - Link to track the shipment
 * @property {string} - Additional note related to the shipment
 * @property {string} - Expected delivery date
 * @property {string} - Third party tracking ID
 * @property {string} - Delivery challan URL for the shipment
 * @property {string} - SEZ forms URL for the shipment
 * @property {string} - URL to the delivery proof document
 * @property {string} - Material list URL for the shipment
 * @property {string} - Material list URL for the shipment
 */
export type UpdateShipmentRequest = z.infer<typeof updateShipmentRequest>;

/**
 * The shape of the model mapping from the api schema into the application shape.
 * Is equal to application shape if all property names match the api schema
 */
export const updateShipmentRequestResponse = z.lazy(() => {
  return z
    .object({
      recipientAddress: updateShipmentAddressResponse.optional(),
      recipientType: updateShipmentRequestRecipientType.optional(),
      senderAddress: updateShipmentAddressResponse.optional(),
      senderType: updateShipmentRequestSenderType,
      title: z.string().optional(),
      carrier: updateShipmentRequestCarrier.optional(),
      dispatchType: updateShipmentRequestDispatchType.optional(),
      dispatchDate: z.string().optional(),
      trackingId: z.string().optional(),
      trackingLink: z.string().optional(),
      note: z.string().optional(),
      expectedDeliveryDate: z.string().optional(),
      thirdPartyTrackingId: z.string().optional(),
      deliveryChallanUrl: z.string().optional(),
      sezFormsUrl: z.string().optional(),
      deliveryProofUrl: z.string().optional(),
      materialListUrl: z.string().optional(),
      shipmentLabelUrl: z.string().optional(),
    })
    .transform((data) => ({
      recipientAddress: data['recipientAddress'],
      recipientType: data['recipientType'],
      senderAddress: data['senderAddress'],
      senderType: data['senderType'],
      title: data['title'],
      carrier: data['carrier'],
      dispatchType: data['dispatchType'],
      dispatchDate: data['dispatchDate'],
      trackingId: data['trackingId'],
      trackingLink: data['trackingLink'],
      note: data['note'],
      expectedDeliveryDate: data['expectedDeliveryDate'],
      thirdPartyTrackingId: data['thirdPartyTrackingId'],
      deliveryChallanUrl: data['deliveryChallanUrl'],
      sezFormsUrl: data['sezFormsUrl'],
      deliveryProofUrl: data['deliveryProofUrl'],
      materialListUrl: data['materialListUrl'],
      shipmentLabelUrl: data['shipmentLabelUrl'],
    }));
});

/**
 * The shape of the model mapping from the application shape into the api schema.
 * Is equal to application shape if all property names match the api schema
 */
export const updateShipmentRequestRequest = z.lazy(() => {
  return z
    .object({
      recipientAddress: updateShipmentAddressRequest.optional(),
      recipientType: updateShipmentRequestRecipientType.optional(),
      senderAddress: updateShipmentAddressRequest.optional(),
      senderType: updateShipmentRequestSenderType,
      title: z.string().optional(),
      carrier: updateShipmentRequestCarrier.optional(),
      dispatchType: updateShipmentRequestDispatchType.optional(),
      dispatchDate: z.string().optional(),
      trackingId: z.string().optional(),
      trackingLink: z.string().optional(),
      note: z.string().optional(),
      expectedDeliveryDate: z.string().optional(),
      thirdPartyTrackingId: z.string().optional(),
      deliveryChallanUrl: z.string().optional(),
      sezFormsUrl: z.string().optional(),
      deliveryProofUrl: z.string().optional(),
      materialListUrl: z.string().optional(),
      shipmentLabelUrl: z.string().optional(),
    })
    .transform((data) => ({
      recipientAddress: data['recipientAddress'],
      recipientType: data['recipientType'],
      senderAddress: data['senderAddress'],
      senderType: data['senderType'],
      title: data['title'],
      carrier: data['carrier'],
      dispatchType: data['dispatchType'],
      dispatchDate: data['dispatchDate'],
      trackingId: data['trackingId'],
      trackingLink: data['trackingLink'],
      note: data['note'],
      expectedDeliveryDate: data['expectedDeliveryDate'],
      thirdPartyTrackingId: data['thirdPartyTrackingId'],
      deliveryChallanUrl: data['deliveryChallanUrl'],
      sezFormsUrl: data['sezFormsUrl'],
      deliveryProofUrl: data['deliveryProofUrl'],
      materialListUrl: data['materialListUrl'],
      shipmentLabelUrl: data['shipmentLabelUrl'],
    }));
});
