// This file was generated by liblab | https://liblab.com/

import { Environment } from './http/environment';
import { SdkConfig } from './http/types';
import { PartnerPocService } from './services/partner-poc';
import { EventContextService } from './services/event-context';
import { DeveloperApiService } from './services/developer-api';
import { ActivityPartnerService } from './services/activity-partner';
import { ActivityVariantService } from './services/activity-variant';
import { ActivityService } from './services/activity';
import { AddressService } from './services/address';
import { AuthService } from './services/auth';
import { BannerService } from './services/banner';
import { BeneficiaryService } from './services/beneficiary';
import { BenevityCombinationService } from './services/benevity-combination';
import { BenevityRegistrationService } from './services/benevity-registration';
import { BnfAttributeService } from './services/bnf-attribute';
import { BookingProviderService } from './services/booking-provider';
import { BookingService } from './services/booking';
import { BoxService } from './services/box';
import { BulkJobService } from './services/bulk-job';
import { CalendarService } from './services/calendar';
import { ChampionOppService } from './services/champion-opp';
import { ChampionService } from './services/champion';
import { ChampionRouteService } from './services/champion-route';
import { ChampionsConfigService } from './services/champions-config';
import { CityService } from './services/city';
import { ClientAuthService } from './services/client-auth';
import { ClientContextService } from './services/client-context';
import { ClientPartnerFilterService } from './services/client-partner-filter';
import { ClientTagService } from './services/client-tag';
import { ClientService } from './services/client';
import { CountryService } from './services/country';
import { CronJobService } from './services/cron-job';
import { CsmService } from './services/csm';
import { CustomerService } from './services/customer';
import { DomainService } from './services/domain';
import { EmailService } from './services/email';
import { FileServiceService } from './services/file-service';
import { EventAttendeeDenormService } from './services/event-attendee-denorm';
import { EventCollateralService } from './services/event-collateral';
import { EventFlyerService } from './services/event-flyer';
import { EventHostFeedbackService } from './services/event-host-feedback';
import { HostFulfillmentService } from './services/host-fulfillment';
import { EventParticipationService } from './services/event-participation';
import { EventRatingService } from './services/event-rating';
import { FaqService } from './services/faq';
import { FeatureFlagService } from './services/feature-flag';
import { IdempotencyKeyService } from './services/idempotency-key';
import { MasterService } from './services/master';
import { MeetingAccountService } from './services/meeting-account';
import { MeetingProviderService } from './services/meeting-provider';
import { MeetingService } from './services/meeting';
import { OpportunityService } from './services/opportunity';
import { PartnerService } from './services/partner';
import { IamService } from './services/iam';
import { ProgramManagerService } from './services/program-manager';
import { RegistrationsService } from './services/registrations';
import { ScheduleQuesService } from './services/schedule-ques';
import { CalendarInviteService } from './services/calendar-invite';
import { TestimonialService } from './services/testimonial';
import { ThankYouEmailService } from './services/thank-you-email';
import { UserService } from './services/user';
import { VolunteerSubmissionService } from './services/volunteer-submission';
import { HostService } from './services/host';
import { ChecklistService } from './services/checklist';
import { GoogleOauthService } from './services/google-oauth';
import { EventService } from './services/event';
import { WebhookService } from './services/webhook';
import { VolPlatformService } from './services/vol-platform';
import { CvpTokenService } from './services/cvp-token';
import { ClientVolPlatformService } from './services/client-vol-platform';
import { ShipmentService } from './services/shipment';
import { GoodfieService } from './services/goodfie';
import { ShipmentTrackingProviderService } from './services/shipment-tracking-provider';
import { ScheduledJobService } from './services/scheduled-job';
import { InventoryInputService } from './services/inventory-input';
import { InventorySlotService } from './services/inventory-slot';
import { FormProviderService } from './services/form-provider';
import { ClientBrandingService } from './services/client-branding';
import { InsightsService } from './services/insights';
import { InsightTemplateService } from './services/insight-template';
import { SummaryReportService } from './services/summary-report';
import { ChampionAppService } from './services/champion-app';
import { HostAppService } from './services/host-app';
import { HostMobileApiService } from './services/host-mobile-api';
import { AgentService } from './services/agent';
import { VolunteerAppService } from './services/volunteer-app';
import { GoodearApiService } from './services/goodear-api';

export * from './services/partner-poc';
export * from './services/event-context';
export * from './services/developer-api';
export * from './services/activity-partner';
export * from './services/activity-variant';
export * from './services/activity';
export * from './services/address';
export * from './services/auth';
export * from './services/banner';
export * from './services/beneficiary';
export * from './services/benevity-combination';
export * from './services/benevity-registration';
export * from './services/bnf-attribute';
export * from './services/booking-provider';
export * from './services/booking';
export * from './services/box';
export * from './services/bulk-job';
export * from './services/calendar';
export * from './services/champion-opp';
export * from './services/champion';
export * from './services/champion-route';
export * from './services/champions-config';
export * from './services/city';
export * from './services/client-auth';
export * from './services/client-context';
export * from './services/client-partner-filter';
export * from './services/client-tag';
export * from './services/client';
export * from './services/country';
export * from './services/cron-job';
export * from './services/csm';
export * from './services/customer';
export * from './services/domain';
export * from './services/email';
export * from './services/file-service';
export * from './services/event-attendee-denorm';
export * from './services/event-collateral';
export * from './services/event-flyer';
export * from './services/event-host-feedback';
export * from './services/host-fulfillment';
export * from './services/event-participation';
export * from './services/event-rating';
export * from './services/faq';
export * from './services/feature-flag';
export * from './services/idempotency-key';
export * from './services/master';
export * from './services/meeting-account';
export * from './services/meeting-provider';
export * from './services/meeting';
export * from './services/opportunity';
export * from './services/partner';
export * from './services/iam';
export * from './services/program-manager';
export * from './services/registrations';
export * from './services/schedule-ques';
export * from './services/calendar-invite';
export * from './services/testimonial';
export * from './services/thank-you-email';
export * from './services/user';
export * from './services/volunteer-submission';
export * from './services/host';
export * from './services/checklist';
export * from './services/google-oauth';
export * from './services/event';
export * from './services/webhook';
export * from './services/vol-platform';
export * from './services/cvp-token';
export * from './services/client-vol-platform';
export * from './services/shipment';
export * from './services/goodfie';
export * from './services/shipment-tracking-provider';
export * from './services/scheduled-job';
export * from './services/inventory-input';
export * from './services/inventory-slot';
export * from './services/form-provider';
export * from './services/client-branding';
export * from './services/insights';
export * from './services/insight-template';
export * from './services/summary-report';
export * from './services/champion-app';
export * from './services/host-app';
export * from './services/host-mobile-api';
export * from './services/agent';
export * from './services/volunteer-app';
export * from './services/goodear-api';
export * from './services/common';

export * from './http';
export { Environment } from './http/environment';

export class PocSdk {
  public readonly partnerPoc: PartnerPocService;

  public readonly eventContext: EventContextService;

  public readonly developerApi: DeveloperApiService;

  public readonly activityPartner: ActivityPartnerService;

  public readonly activityVariant: ActivityVariantService;

  public readonly activity: ActivityService;

  public readonly address: AddressService;

  public readonly auth: AuthService;

  public readonly banner: BannerService;

  public readonly beneficiary: BeneficiaryService;

  public readonly benevityCombination: BenevityCombinationService;

  public readonly benevityRegistration: BenevityRegistrationService;

  public readonly bnfAttribute: BnfAttributeService;

  public readonly bookingProvider: BookingProviderService;

  public readonly booking: BookingService;

  public readonly box: BoxService;

  public readonly bulkJob: BulkJobService;

  public readonly calendar: CalendarService;

  public readonly championOpp: ChampionOppService;

  public readonly champion: ChampionService;

  public readonly championRoute: ChampionRouteService;

  public readonly championsConfig: ChampionsConfigService;

  public readonly city: CityService;

  public readonly clientAuth: ClientAuthService;

  public readonly clientContext: ClientContextService;

  public readonly clientPartnerFilter: ClientPartnerFilterService;

  public readonly clientTag: ClientTagService;

  public readonly client: ClientService;

  public readonly country: CountryService;

  public readonly cronJob: CronJobService;

  public readonly csm: CsmService;

  public readonly customer: CustomerService;

  public readonly domain: DomainService;

  public readonly email: EmailService;

  public readonly fileService: FileServiceService;

  public readonly eventAttendeeDenorm: EventAttendeeDenormService;

  public readonly eventCollateral: EventCollateralService;

  public readonly eventFlyer: EventFlyerService;

  public readonly eventHostFeedback: EventHostFeedbackService;

  public readonly hostFulfillment: HostFulfillmentService;

  public readonly eventParticipation: EventParticipationService;

  public readonly eventRating: EventRatingService;

  public readonly faq: FaqService;

  public readonly featureFlag: FeatureFlagService;

  public readonly idempotencyKey: IdempotencyKeyService;

  public readonly master: MasterService;

  public readonly meetingAccount: MeetingAccountService;

  public readonly meetingProvider: MeetingProviderService;

  public readonly meeting: MeetingService;

  public readonly opportunity: OpportunityService;

  public readonly partner: PartnerService;

  public readonly iam: IamService;

  public readonly programManager: ProgramManagerService;

  public readonly registrations: RegistrationsService;

  public readonly scheduleQues: ScheduleQuesService;

  public readonly calendarInvite: CalendarInviteService;

  public readonly testimonial: TestimonialService;

  public readonly thankYouEmail: ThankYouEmailService;

  public readonly user: UserService;

  public readonly volunteerSubmission: VolunteerSubmissionService;

  public readonly host: HostService;

  public readonly checklist: ChecklistService;

  public readonly googleOauth: GoogleOauthService;

  public readonly event: EventService;

  public readonly webhook: WebhookService;

  public readonly volPlatform: VolPlatformService;

  public readonly cvpToken: CvpTokenService;

  public readonly clientVolPlatform: ClientVolPlatformService;

  public readonly shipment: ShipmentService;

  public readonly goodfie: GoodfieService;

  public readonly shipmentTrackingProvider: ShipmentTrackingProviderService;

  public readonly scheduledJob: ScheduledJobService;

  public readonly inventoryInput: InventoryInputService;

  public readonly inventorySlot: InventorySlotService;

  public readonly formProvider: FormProviderService;

  public readonly clientBranding: ClientBrandingService;

  public readonly insights: InsightsService;

  public readonly insightTemplate: InsightTemplateService;

  public readonly summaryReport: SummaryReportService;

  public readonly championApp: ChampionAppService;

  public readonly hostApp: HostAppService;

  public readonly hostMobileApi: HostMobileApiService;

  public readonly agent: AgentService;

  public readonly volunteerApp: VolunteerAppService;

  public readonly goodearApi: GoodearApiService;

  constructor(public config: SdkConfig) {
    this.partnerPoc = new PartnerPocService(this.config);

    this.eventContext = new EventContextService(this.config);

    this.developerApi = new DeveloperApiService(this.config);

    this.activityPartner = new ActivityPartnerService(this.config);

    this.activityVariant = new ActivityVariantService(this.config);

    this.activity = new ActivityService(this.config);

    this.address = new AddressService(this.config);

    this.auth = new AuthService(this.config);

    this.banner = new BannerService(this.config);

    this.beneficiary = new BeneficiaryService(this.config);

    this.benevityCombination = new BenevityCombinationService(this.config);

    this.benevityRegistration = new BenevityRegistrationService(this.config);

    this.bnfAttribute = new BnfAttributeService(this.config);

    this.bookingProvider = new BookingProviderService(this.config);

    this.booking = new BookingService(this.config);

    this.box = new BoxService(this.config);

    this.bulkJob = new BulkJobService(this.config);

    this.calendar = new CalendarService(this.config);

    this.championOpp = new ChampionOppService(this.config);

    this.champion = new ChampionService(this.config);

    this.championRoute = new ChampionRouteService(this.config);

    this.championsConfig = new ChampionsConfigService(this.config);

    this.city = new CityService(this.config);

    this.clientAuth = new ClientAuthService(this.config);

    this.clientContext = new ClientContextService(this.config);

    this.clientPartnerFilter = new ClientPartnerFilterService(this.config);

    this.clientTag = new ClientTagService(this.config);

    this.client = new ClientService(this.config);

    this.country = new CountryService(this.config);

    this.cronJob = new CronJobService(this.config);

    this.csm = new CsmService(this.config);

    this.customer = new CustomerService(this.config);

    this.domain = new DomainService(this.config);

    this.email = new EmailService(this.config);

    this.fileService = new FileServiceService(this.config);

    this.eventAttendeeDenorm = new EventAttendeeDenormService(this.config);

    this.eventCollateral = new EventCollateralService(this.config);

    this.eventFlyer = new EventFlyerService(this.config);

    this.eventHostFeedback = new EventHostFeedbackService(this.config);

    this.hostFulfillment = new HostFulfillmentService(this.config);

    this.eventParticipation = new EventParticipationService(this.config);

    this.eventRating = new EventRatingService(this.config);

    this.faq = new FaqService(this.config);

    this.featureFlag = new FeatureFlagService(this.config);

    this.idempotencyKey = new IdempotencyKeyService(this.config);

    this.master = new MasterService(this.config);

    this.meetingAccount = new MeetingAccountService(this.config);

    this.meetingProvider = new MeetingProviderService(this.config);

    this.meeting = new MeetingService(this.config);

    this.opportunity = new OpportunityService(this.config);

    this.partner = new PartnerService(this.config);

    this.iam = new IamService(this.config);

    this.programManager = new ProgramManagerService(this.config);

    this.registrations = new RegistrationsService(this.config);

    this.scheduleQues = new ScheduleQuesService(this.config);

    this.calendarInvite = new CalendarInviteService(this.config);

    this.testimonial = new TestimonialService(this.config);

    this.thankYouEmail = new ThankYouEmailService(this.config);

    this.user = new UserService(this.config);

    this.volunteerSubmission = new VolunteerSubmissionService(this.config);

    this.host = new HostService(this.config);

    this.checklist = new ChecklistService(this.config);

    this.googleOauth = new GoogleOauthService(this.config);

    this.event = new EventService(this.config);

    this.webhook = new WebhookService(this.config);

    this.volPlatform = new VolPlatformService(this.config);

    this.cvpToken = new CvpTokenService(this.config);

    this.clientVolPlatform = new ClientVolPlatformService(this.config);

    this.shipment = new ShipmentService(this.config);

    this.goodfie = new GoodfieService(this.config);

    this.shipmentTrackingProvider = new ShipmentTrackingProviderService(this.config);

    this.scheduledJob = new ScheduledJobService(this.config);

    this.inventoryInput = new InventoryInputService(this.config);

    this.inventorySlot = new InventorySlotService(this.config);

    this.formProvider = new FormProviderService(this.config);

    this.clientBranding = new ClientBrandingService(this.config);

    this.insights = new InsightsService(this.config);

    this.insightTemplate = new InsightTemplateService(this.config);

    this.summaryReport = new SummaryReportService(this.config);

    this.championApp = new ChampionAppService(this.config);

    this.hostApp = new HostAppService(this.config);

    this.hostMobileApi = new HostMobileApiService(this.config);

    this.agent = new AgentService(this.config);

    this.volunteerApp = new VolunteerAppService(this.config);

    this.goodearApi = new GoodearApiService(this.config);
  }

  set baseUrl(baseUrl: string) {
    this.partnerPoc.baseUrl = baseUrl;
    this.eventContext.baseUrl = baseUrl;
    this.developerApi.baseUrl = baseUrl;
    this.activityPartner.baseUrl = baseUrl;
    this.activityVariant.baseUrl = baseUrl;
    this.activity.baseUrl = baseUrl;
    this.address.baseUrl = baseUrl;
    this.auth.baseUrl = baseUrl;
    this.banner.baseUrl = baseUrl;
    this.beneficiary.baseUrl = baseUrl;
    this.benevityCombination.baseUrl = baseUrl;
    this.benevityRegistration.baseUrl = baseUrl;
    this.bnfAttribute.baseUrl = baseUrl;
    this.bookingProvider.baseUrl = baseUrl;
    this.booking.baseUrl = baseUrl;
    this.box.baseUrl = baseUrl;
    this.bulkJob.baseUrl = baseUrl;
    this.calendar.baseUrl = baseUrl;
    this.championOpp.baseUrl = baseUrl;
    this.champion.baseUrl = baseUrl;
    this.championRoute.baseUrl = baseUrl;
    this.championsConfig.baseUrl = baseUrl;
    this.city.baseUrl = baseUrl;
    this.clientAuth.baseUrl = baseUrl;
    this.clientContext.baseUrl = baseUrl;
    this.clientPartnerFilter.baseUrl = baseUrl;
    this.clientTag.baseUrl = baseUrl;
    this.client.baseUrl = baseUrl;
    this.country.baseUrl = baseUrl;
    this.cronJob.baseUrl = baseUrl;
    this.csm.baseUrl = baseUrl;
    this.customer.baseUrl = baseUrl;
    this.domain.baseUrl = baseUrl;
    this.email.baseUrl = baseUrl;
    this.fileService.baseUrl = baseUrl;
    this.eventAttendeeDenorm.baseUrl = baseUrl;
    this.eventCollateral.baseUrl = baseUrl;
    this.eventFlyer.baseUrl = baseUrl;
    this.eventHostFeedback.baseUrl = baseUrl;
    this.hostFulfillment.baseUrl = baseUrl;
    this.eventParticipation.baseUrl = baseUrl;
    this.eventRating.baseUrl = baseUrl;
    this.faq.baseUrl = baseUrl;
    this.featureFlag.baseUrl = baseUrl;
    this.idempotencyKey.baseUrl = baseUrl;
    this.master.baseUrl = baseUrl;
    this.meetingAccount.baseUrl = baseUrl;
    this.meetingProvider.baseUrl = baseUrl;
    this.meeting.baseUrl = baseUrl;
    this.opportunity.baseUrl = baseUrl;
    this.partner.baseUrl = baseUrl;
    this.iam.baseUrl = baseUrl;
    this.programManager.baseUrl = baseUrl;
    this.registrations.baseUrl = baseUrl;
    this.scheduleQues.baseUrl = baseUrl;
    this.calendarInvite.baseUrl = baseUrl;
    this.testimonial.baseUrl = baseUrl;
    this.thankYouEmail.baseUrl = baseUrl;
    this.user.baseUrl = baseUrl;
    this.volunteerSubmission.baseUrl = baseUrl;
    this.host.baseUrl = baseUrl;
    this.checklist.baseUrl = baseUrl;
    this.googleOauth.baseUrl = baseUrl;
    this.event.baseUrl = baseUrl;
    this.webhook.baseUrl = baseUrl;
    this.volPlatform.baseUrl = baseUrl;
    this.cvpToken.baseUrl = baseUrl;
    this.clientVolPlatform.baseUrl = baseUrl;
    this.shipment.baseUrl = baseUrl;
    this.goodfie.baseUrl = baseUrl;
    this.shipmentTrackingProvider.baseUrl = baseUrl;
    this.scheduledJob.baseUrl = baseUrl;
    this.inventoryInput.baseUrl = baseUrl;
    this.inventorySlot.baseUrl = baseUrl;
    this.formProvider.baseUrl = baseUrl;
    this.clientBranding.baseUrl = baseUrl;
    this.insights.baseUrl = baseUrl;
    this.insightTemplate.baseUrl = baseUrl;
    this.summaryReport.baseUrl = baseUrl;
    this.championApp.baseUrl = baseUrl;
    this.hostApp.baseUrl = baseUrl;
    this.hostMobileApi.baseUrl = baseUrl;
    this.agent.baseUrl = baseUrl;
    this.volunteerApp.baseUrl = baseUrl;
    this.goodearApi.baseUrl = baseUrl;
  }

  set environment(environment: Environment) {
    this.partnerPoc.baseUrl = environment;
    this.eventContext.baseUrl = environment;
    this.developerApi.baseUrl = environment;
    this.activityPartner.baseUrl = environment;
    this.activityVariant.baseUrl = environment;
    this.activity.baseUrl = environment;
    this.address.baseUrl = environment;
    this.auth.baseUrl = environment;
    this.banner.baseUrl = environment;
    this.beneficiary.baseUrl = environment;
    this.benevityCombination.baseUrl = environment;
    this.benevityRegistration.baseUrl = environment;
    this.bnfAttribute.baseUrl = environment;
    this.bookingProvider.baseUrl = environment;
    this.booking.baseUrl = environment;
    this.box.baseUrl = environment;
    this.bulkJob.baseUrl = environment;
    this.calendar.baseUrl = environment;
    this.championOpp.baseUrl = environment;
    this.champion.baseUrl = environment;
    this.championRoute.baseUrl = environment;
    this.championsConfig.baseUrl = environment;
    this.city.baseUrl = environment;
    this.clientAuth.baseUrl = environment;
    this.clientContext.baseUrl = environment;
    this.clientPartnerFilter.baseUrl = environment;
    this.clientTag.baseUrl = environment;
    this.client.baseUrl = environment;
    this.country.baseUrl = environment;
    this.cronJob.baseUrl = environment;
    this.csm.baseUrl = environment;
    this.customer.baseUrl = environment;
    this.domain.baseUrl = environment;
    this.email.baseUrl = environment;
    this.fileService.baseUrl = environment;
    this.eventAttendeeDenorm.baseUrl = environment;
    this.eventCollateral.baseUrl = environment;
    this.eventFlyer.baseUrl = environment;
    this.eventHostFeedback.baseUrl = environment;
    this.hostFulfillment.baseUrl = environment;
    this.eventParticipation.baseUrl = environment;
    this.eventRating.baseUrl = environment;
    this.faq.baseUrl = environment;
    this.featureFlag.baseUrl = environment;
    this.idempotencyKey.baseUrl = environment;
    this.master.baseUrl = environment;
    this.meetingAccount.baseUrl = environment;
    this.meetingProvider.baseUrl = environment;
    this.meeting.baseUrl = environment;
    this.opportunity.baseUrl = environment;
    this.partner.baseUrl = environment;
    this.iam.baseUrl = environment;
    this.programManager.baseUrl = environment;
    this.registrations.baseUrl = environment;
    this.scheduleQues.baseUrl = environment;
    this.calendarInvite.baseUrl = environment;
    this.testimonial.baseUrl = environment;
    this.thankYouEmail.baseUrl = environment;
    this.user.baseUrl = environment;
    this.volunteerSubmission.baseUrl = environment;
    this.host.baseUrl = environment;
    this.checklist.baseUrl = environment;
    this.googleOauth.baseUrl = environment;
    this.event.baseUrl = environment;
    this.webhook.baseUrl = environment;
    this.volPlatform.baseUrl = environment;
    this.cvpToken.baseUrl = environment;
    this.clientVolPlatform.baseUrl = environment;
    this.shipment.baseUrl = environment;
    this.goodfie.baseUrl = environment;
    this.shipmentTrackingProvider.baseUrl = environment;
    this.scheduledJob.baseUrl = environment;
    this.inventoryInput.baseUrl = environment;
    this.inventorySlot.baseUrl = environment;
    this.formProvider.baseUrl = environment;
    this.clientBranding.baseUrl = environment;
    this.insights.baseUrl = environment;
    this.insightTemplate.baseUrl = environment;
    this.summaryReport.baseUrl = environment;
    this.championApp.baseUrl = environment;
    this.hostApp.baseUrl = environment;
    this.hostMobileApi.baseUrl = environment;
    this.agent.baseUrl = environment;
    this.volunteerApp.baseUrl = environment;
    this.goodearApi.baseUrl = environment;
  }

  set timeoutMs(timeoutMs: number) {
    this.partnerPoc.timeoutMs = timeoutMs;
    this.eventContext.timeoutMs = timeoutMs;
    this.developerApi.timeoutMs = timeoutMs;
    this.activityPartner.timeoutMs = timeoutMs;
    this.activityVariant.timeoutMs = timeoutMs;
    this.activity.timeoutMs = timeoutMs;
    this.address.timeoutMs = timeoutMs;
    this.auth.timeoutMs = timeoutMs;
    this.banner.timeoutMs = timeoutMs;
    this.beneficiary.timeoutMs = timeoutMs;
    this.benevityCombination.timeoutMs = timeoutMs;
    this.benevityRegistration.timeoutMs = timeoutMs;
    this.bnfAttribute.timeoutMs = timeoutMs;
    this.bookingProvider.timeoutMs = timeoutMs;
    this.booking.timeoutMs = timeoutMs;
    this.box.timeoutMs = timeoutMs;
    this.bulkJob.timeoutMs = timeoutMs;
    this.calendar.timeoutMs = timeoutMs;
    this.championOpp.timeoutMs = timeoutMs;
    this.champion.timeoutMs = timeoutMs;
    this.championRoute.timeoutMs = timeoutMs;
    this.championsConfig.timeoutMs = timeoutMs;
    this.city.timeoutMs = timeoutMs;
    this.clientAuth.timeoutMs = timeoutMs;
    this.clientContext.timeoutMs = timeoutMs;
    this.clientPartnerFilter.timeoutMs = timeoutMs;
    this.clientTag.timeoutMs = timeoutMs;
    this.client.timeoutMs = timeoutMs;
    this.country.timeoutMs = timeoutMs;
    this.cronJob.timeoutMs = timeoutMs;
    this.csm.timeoutMs = timeoutMs;
    this.customer.timeoutMs = timeoutMs;
    this.domain.timeoutMs = timeoutMs;
    this.email.timeoutMs = timeoutMs;
    this.fileService.timeoutMs = timeoutMs;
    this.eventAttendeeDenorm.timeoutMs = timeoutMs;
    this.eventCollateral.timeoutMs = timeoutMs;
    this.eventFlyer.timeoutMs = timeoutMs;
    this.eventHostFeedback.timeoutMs = timeoutMs;
    this.hostFulfillment.timeoutMs = timeoutMs;
    this.eventParticipation.timeoutMs = timeoutMs;
    this.eventRating.timeoutMs = timeoutMs;
    this.faq.timeoutMs = timeoutMs;
    this.featureFlag.timeoutMs = timeoutMs;
    this.idempotencyKey.timeoutMs = timeoutMs;
    this.master.timeoutMs = timeoutMs;
    this.meetingAccount.timeoutMs = timeoutMs;
    this.meetingProvider.timeoutMs = timeoutMs;
    this.meeting.timeoutMs = timeoutMs;
    this.opportunity.timeoutMs = timeoutMs;
    this.partner.timeoutMs = timeoutMs;
    this.iam.timeoutMs = timeoutMs;
    this.programManager.timeoutMs = timeoutMs;
    this.registrations.timeoutMs = timeoutMs;
    this.scheduleQues.timeoutMs = timeoutMs;
    this.calendarInvite.timeoutMs = timeoutMs;
    this.testimonial.timeoutMs = timeoutMs;
    this.thankYouEmail.timeoutMs = timeoutMs;
    this.user.timeoutMs = timeoutMs;
    this.volunteerSubmission.timeoutMs = timeoutMs;
    this.host.timeoutMs = timeoutMs;
    this.checklist.timeoutMs = timeoutMs;
    this.googleOauth.timeoutMs = timeoutMs;
    this.event.timeoutMs = timeoutMs;
    this.webhook.timeoutMs = timeoutMs;
    this.volPlatform.timeoutMs = timeoutMs;
    this.cvpToken.timeoutMs = timeoutMs;
    this.clientVolPlatform.timeoutMs = timeoutMs;
    this.shipment.timeoutMs = timeoutMs;
    this.goodfie.timeoutMs = timeoutMs;
    this.shipmentTrackingProvider.timeoutMs = timeoutMs;
    this.scheduledJob.timeoutMs = timeoutMs;
    this.inventoryInput.timeoutMs = timeoutMs;
    this.inventorySlot.timeoutMs = timeoutMs;
    this.formProvider.timeoutMs = timeoutMs;
    this.clientBranding.timeoutMs = timeoutMs;
    this.insights.timeoutMs = timeoutMs;
    this.insightTemplate.timeoutMs = timeoutMs;
    this.summaryReport.timeoutMs = timeoutMs;
    this.championApp.timeoutMs = timeoutMs;
    this.hostApp.timeoutMs = timeoutMs;
    this.hostMobileApi.timeoutMs = timeoutMs;
    this.agent.timeoutMs = timeoutMs;
    this.volunteerApp.timeoutMs = timeoutMs;
    this.goodearApi.timeoutMs = timeoutMs;
  }

  set token(token: string) {
    this.partnerPoc.token = token;
    this.eventContext.token = token;
    this.developerApi.token = token;
    this.activityPartner.token = token;
    this.activityVariant.token = token;
    this.activity.token = token;
    this.address.token = token;
    this.auth.token = token;
    this.banner.token = token;
    this.beneficiary.token = token;
    this.benevityCombination.token = token;
    this.benevityRegistration.token = token;
    this.bnfAttribute.token = token;
    this.bookingProvider.token = token;
    this.booking.token = token;
    this.box.token = token;
    this.bulkJob.token = token;
    this.calendar.token = token;
    this.championOpp.token = token;
    this.champion.token = token;
    this.championRoute.token = token;
    this.championsConfig.token = token;
    this.city.token = token;
    this.clientAuth.token = token;
    this.clientContext.token = token;
    this.clientPartnerFilter.token = token;
    this.clientTag.token = token;
    this.client.token = token;
    this.country.token = token;
    this.cronJob.token = token;
    this.csm.token = token;
    this.customer.token = token;
    this.domain.token = token;
    this.email.token = token;
    this.fileService.token = token;
    this.eventAttendeeDenorm.token = token;
    this.eventCollateral.token = token;
    this.eventFlyer.token = token;
    this.eventHostFeedback.token = token;
    this.hostFulfillment.token = token;
    this.eventParticipation.token = token;
    this.eventRating.token = token;
    this.faq.token = token;
    this.featureFlag.token = token;
    this.idempotencyKey.token = token;
    this.master.token = token;
    this.meetingAccount.token = token;
    this.meetingProvider.token = token;
    this.meeting.token = token;
    this.opportunity.token = token;
    this.partner.token = token;
    this.iam.token = token;
    this.programManager.token = token;
    this.registrations.token = token;
    this.scheduleQues.token = token;
    this.calendarInvite.token = token;
    this.testimonial.token = token;
    this.thankYouEmail.token = token;
    this.user.token = token;
    this.volunteerSubmission.token = token;
    this.host.token = token;
    this.checklist.token = token;
    this.googleOauth.token = token;
    this.event.token = token;
    this.webhook.token = token;
    this.volPlatform.token = token;
    this.cvpToken.token = token;
    this.clientVolPlatform.token = token;
    this.shipment.token = token;
    this.goodfie.token = token;
    this.shipmentTrackingProvider.token = token;
    this.scheduledJob.token = token;
    this.inventoryInput.token = token;
    this.inventorySlot.token = token;
    this.formProvider.token = token;
    this.clientBranding.token = token;
    this.insights.token = token;
    this.insightTemplate.token = token;
    this.summaryReport.token = token;
    this.championApp.token = token;
    this.hostApp.token = token;
    this.hostMobileApi.token = token;
    this.agent.token = token;
    this.volunteerApp.token = token;
    this.goodearApi.token = token;
  }
}

// c029837e0e474b76bc487506e8799df5e3335891efe4fb02bda7a1441840310c
